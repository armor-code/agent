# Common configuration for all agents
agentDefaults:
  # ArmorCode server URL - common for all agents
  serverUrl: https://web-agent.armorcode.ai

  # Request timeout in seconds
  timeout: 30

  # Whether to verify SSL certificates
  verify: false

  # Thread pool size
  poolSize: 5

  # Whether to upload directly to ArmorCode
  uploadToAc: true

  envName: production

# Turn off single deployment mode
singleDeployment:
  enabled: false

# Enable multiple deployments mode
multipleDeployments:
  enabled: true

  # List of deployments with unique names and API keys
  instances:
    # First agent - Production environment
    - name: prod
      apiKey: bdjhwbjhdb-dddd-dddd-ssss-bdcjhdbcjhdb

    # Second agent - Staging environment
    - name: staging
      apiKey: bdjhwbjhdb-dddd-dddd-ssss-bdcjhdbcjhdb

    # Third agent - Development environment
    - name: dev
      apiKey: bdjhwbjhdb-dddd-dddd-ssss-bdcjhdbcjhdb

# Use local built image
image:
  repository: armorcode/armorcode-web-agent
  tag: latest
  pullPolicy: IfNotPresent

# Persistence configuration for logs and agent data

ebs:
  enabled: true
  storageClass:
    name: "ebs-sc"
    provisioner: "ebs.csi.aws.com"
    parameters:
      type: gp3
      fsType: ext4
      encrypted: "true"
    reclaimPolicy: "Retain"
    allowVolumeExpansion: true
    volumeBindingMode: "Immediate"

  # PVC Configuration
  persistence:
    enabled: true
    storageClassName: "ebs-sc"
    accessMode: ReadWriteOnce
    size: 5Gi

# Network policy configuration
networkPolicy:
  enabled: true
  spec:
    podSelector:
      matchLabels:
        app.kubernetes.io/name: armorcode-web-agent
    policyTypes:
      - Egress
    egress:
      # Allow DNS resolution
      - to:
          - namespaceSelector: {}
            podSelector:
              matchLabels:
                k8s-app: kube-dns
        ports:
          - port: 53
            protocol: UDP
          - port: 53
            protocol: TCP

      # Allow HTTPS to all external destinations
      - to:
          - ipBlock:
              cidr: 0.0.0.0/0
        ports:
          - port: 443
            protocol: TCP

serviceAccount:
  create: false

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000